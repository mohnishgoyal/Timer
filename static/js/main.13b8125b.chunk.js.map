{"version":3,"sources":["Stopwatch.js","Countdown.js","App.js","index.js"],"names":["Stopwatch","state","timerOn","timerStart","timerTime","startTimer","setState","Date","now","timer","setInterval","stopTimer","clearInterval","resetTimer","this","centiseconds","Math","floor","slice","seconds","minutes","hours","className","onClick","Component","Countdown","newTime","alert","adjustTimer","input","max","App","props","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.13b8125b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport \"./App.css\";\r\n\r\nclass Stopwatch extends Component{\r\n\r\n    state = {\r\n        timerOn: false,\r\n        timerStart: 0,\r\n        timerTime: 0\r\n      };\r\n\r\n      startTimer = () => {\r\n        this.setState({\r\n          timerOn: true,\r\n          timerTime: this.state.timerTime,\r\n          timerStart: Date.now() - this.state.timerTime\r\n        });\r\n        this.timer = setInterval(() => {\r\n          this.setState({\r\n            timerTime: Date.now() - this.state.timerStart\r\n          });\r\n        }, 10);\r\n      };\r\n\r\n      stopTimer = () => {\r\n        this.setState({ timerOn: false });\r\n        clearInterval(this.timer);\r\n      };\r\n\r\n      resetTimer = () => {\r\n        this.setState({\r\n          timerStart: 0,\r\n          timerTime: 0\r\n        });\r\n      };\r\n\r\n    render(){\r\n        const { timerTime } = this.state;\r\n        let centiseconds = (\"0\" + (Math.floor(timerTime / 10) % 100)).slice(-2);\r\n        let seconds = (\"0\" + (Math.floor(timerTime / 1000) % 60)).slice(-2);\r\n        let minutes = (\"0\" + (Math.floor(timerTime / 60000) % 60)).slice(-2);\r\n        let hours = (\"0\" + Math.floor(timerTime / 3600000)).slice(-2);\r\n\r\n        return(\r\n            <div className=\"Stopwatch\">\r\n                <div className=\"Stopwatch-header\">Stopwatch</div>\r\n                <div className=\"Stopwatch-display\">\r\n                    {hours} : {minutes} : {seconds} : {centiseconds}\r\n                    {this.state.timerOn === false && this.state.timerTime === 0 && (\r\n                    <button onClick={this.startTimer}>Start</button>\r\n                    )}\r\n                    {this.state.timerOn === true && (\r\n                    <button onClick={this.stopTimer}>Stop</button>\r\n                    )}\r\n                    {this.state.timerOn === false && this.state.timerTime > 0 && (\r\n                    <button onClick={this.startTimer}>Resume</button>\r\n                    )}\r\n                    {this.state.timerOn === false && this.state.timerTime > 0 && (\r\n                    <button onClick={this.resetTimer}>Reset</button>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Stopwatch;","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\n\r\nclass Countdown extends Component {\r\n    state = {\r\n        timerOn: false,\r\n        timerStart: 0,\r\n        timerTime: 0\r\n      };\r\n\r\n      startTimer = () => {\r\n        this.setState({\r\n          timerOn: true,\r\n          timerTime: this.state.timerTime,\r\n          timerStart: this.state.timerTime\r\n        });\r\n        this.timer = setInterval(() => {\r\n          const newTime = this.state.timerTime - 10;\r\n          if (newTime >= 0) {\r\n            this.setState({\r\n              timerTime: newTime\r\n            });\r\n          } else {\r\n            clearInterval(this.timer);\r\n            this.setState({ timerOn: false });\r\n            alert(\"Countdown ended\");\r\n          }\r\n        }, 10);\r\n      };\r\n\r\n      stopTimer = () => {\r\n        clearInterval(this.timer);\r\n        this.setState({ timerOn: false });\r\n      };\r\n      resetTimer = () => {\r\n        if (this.state.timerOn === false) {\r\n          this.setState({\r\n            timerTime: this.state.timerStart\r\n          });\r\n        }\r\n      };\r\n\r\n      adjustTimer = input => {\r\n        const { timerTime, timerOn } = this.state;\r\n        const max = 216000000;\r\n        if (!timerOn) {\r\n          if (input === \"incHours\" && timerTime + 3600000 < max) {\r\n            this.setState({ timerTime: timerTime + 3600000 });\r\n          } else if (input === \"decHours\" && timerTime - 3600000 >= 0) {\r\n            this.setState({ timerTime: timerTime - 3600000 });\r\n          } else if (input === \"incMinutes\" && timerTime + 60000 < max) {\r\n            this.setState({ timerTime: timerTime + 60000 });\r\n          } else if (input === \"decMinutes\" && timerTime - 60000 >= 0) {\r\n            this.setState({ timerTime: timerTime - 60000 });\r\n          } else if (input === \"incSeconds\" && timerTime + 1000 < max) {\r\n            this.setState({ timerTime: timerTime + 1000 });\r\n          } else if (input === \"decSeconds\" && timerTime - 1000 >= 0) {\r\n            this.setState({ timerTime: timerTime - 1000 });\r\n          }\r\n        }\r\n      };\r\n\r\n  render() {\r\n\r\n    const { timerTime, timerStart, timerOn } = this.state;\r\n    let seconds = (\"0\" + (Math.floor((timerTime / 1000) % 60) % 60)).slice(-2);\r\n    let minutes = (\"0\" + Math.floor((timerTime / 60000) % 60)).slice(-2);\r\n    let hours = (\"0\" + Math.floor((timerTime / 3600000) % 60)).slice(-2);\r\n    return (\r\n      <div className=\"Countdown\">\r\n        <div className=\"Countdown-header\">Countdown</div>\r\n        <div className=\"Countdown-label\">Hours : Minutes : Seconds</div>\r\n        <div className=\"Countdown-time\">\r\n            {hours} : {minutes} : {seconds}\r\n        </div>\r\n        <div className=\"Countdown-display\">\r\n            <button onClick={() => this.adjustTimer(\"incHours\")}>&#8679;</button>\r\n            <button onClick={() => this.adjustTimer(\"incMinutes\")}>&#8679;</button>\r\n            <button onClick={() => this.adjustTimer(\"incSeconds\")}>&#8679;</button>\r\n            <button onClick={() => this.adjustTimer(\"decHours\")}>&#8681;</button>\r\n            <button onClick={() => this.adjustTimer(\"decMinutes\")}>&#8681;</button>\r\n            <button onClick={() => this.adjustTimer(\"decSeconds\")}>&#8681;</button>\r\n        </div>\r\n        {timerOn === false &&\r\n            (timerStart === 0 || timerTime === timerStart) && (\r\n                <button onClick={this.startTimer}>Start</button>\r\n            )}\r\n        {timerOn === true && timerTime >= 1000 && (\r\n            <button onClick={this.stopTimer}>Stop</button>\r\n            )}\r\n        {timerOn === false &&\r\n            (timerStart !== 0 && timerStart !== timerTime && timerTime !== 0) && (\r\n                <button onClick={this.startTimer}>Resume</button>\r\n            )}\r\n        {(timerOn === false || timerTime < 1000) &&\r\n            (timerStart !== timerTime && timerStart > 0) && (\r\n                <button onClick={this.resetTimer}>Reset</button>\r\n            )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Countdown;","import React, {Component} from 'react';\nimport './App.css';\nimport Stopwatch from \"./Stopwatch\";\nimport Countdown from \"./Countdown\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {  }\n  }\n  render() { \n    return (  \n      <div className=\"App\">\n        <div className=\"App-title\">Timers</div>\n        <div className=\"Timers\">\n          <Stopwatch />\n          <Countdown />\n        </div>\n      </div>\n    );\n  }\n}\n \nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}